CREATE DATABASE hito3_2023;
USE hito3_2023;

#cada usuario puede crear sus propias variables
SET @usuario = 'ADMIN';
SET @locacioin='EL ALTO';
#para ver la variable
SELECT @usuario;
SELECT @locacioin;

CREATE OR REPLACE FUNCTION variable()
    RETURNS TEXT
    BEGIN
        RETURN @usuario;
    end;
SELECT variable();

#si necesito cambiar el dato que guarda la variable solo cambio loq ue la variable guarda sin create or replace. solo cambiamos el set y lo corremos

SET @HITO_3 = 'ADMIN';

CREATE FUNCTION verificar_usuario()
RETURNS TEXT
BEGIN
    IF @HITO_3 = 'ADMIN' THEN
        RETURN 'Usuario ADMIN';
    ELSE
        RETURN 'Usuario Invitado';
    END IF;
END;

SELECT verificar_usuario();

#con case
#cuando usamos text o var char(), cuando usamos varchar sabemos cantidad de caracteres
CREATE or replace FUNCTION verificar_usuario2()
    RETURNS VARCHAR(100)
    BEGIN
        DECLARE mensaje VARCHAR(100);

        CASE @HITO_3
            WHEN 'ADMIN' THEN SET mensaje = 'Usuario ADMIN';
            ELSE SET mensaje = 'Usuario Invitado';
        END case;
        RETURN mensaje;
    END;
SELECT verificar_usuario2();

#EMPEZAMOS CON BUCLES
#GENERAR LOS PRIMEOS 10 numeros enteros

CREATE FUNCTION numeros_naturales(limite int)
    RETURNS TEXT
    BEGIN
        DECLARE cont int default 1;       #el valor es 1 de inicio
        DECLARE respuesta TEXT DEFAULT''; #declara carateres a llenar
        WHILE cont <= limite do
            SET respuesta = CONCAT(respuesta, cont, ', ');#si no pungo respuesta dentro del contact solo imprime el numeor final, y no deja uno por uno
            SET cont= cont + 1;
        END WHILE;

        RETURN respuesta;
    end;
SELECT numeros_naturales(10);


# 2, 1, 4, 3, 6, 5, 8, 7

CREATE OR REPLACE FUNCTION serie()
    RETURNS TEXT
    BEGIN
        DECLARE cont int default 1;
        DECLARE respuesta TEXT DEFAULT'';
        WHILE cont <= 8 do
            IF cont % 2 = 1 THEN
                SET respuesta = CONCAT(respuesta, cont + 1, ', ', cont, ', ');
            ELSE
                SET respuesta = CONCAT(respuesta, cont, ', ', cont - 1, ', ');
            END IF;
            SET cont= cont + 2;
        END WHILE;
        SET respuesta = CONCAT(respuesta, ' ');

        RETURN respuesta;
    end;

SELECT serie();

CREATE OR REPLACE FUNCTION manej_de_repeat(x int)
    RETURNS TEXT
    BEGIN
        DECLARE str TEXT DEFAULT '';
        REPEAT
            SET str = CONCAT (str, x, ',');
            SET x = x-1;
        until x<=0 end repeat;
        RETURN str;
    end;
SELECT manej_de_repeat(5);


CREATE OR REPLACE FUNCTION manejo_de_repeat_v2(x int)
    RETURNS TEXT
    BEGIN
        DECLARE str TEXT DEFAULT '';
        REPEAT
            IF x%2 = 0 THEN
                SET str = CONCAT (str, x, '--AA--');
            ELSE
                SET str = CONCAT (str, x, '--BB--');
            END IF;
        SET x=x-1;
        until x<=0 end repeat;
        RETURN str;
    end;
SELECT manejo_de_repeat_v2(5);

#crear un LOOP
CREATE FUNCTION manejo_de_loop(x int)
    RETURNS TEXT
    BEGIN
        DECLARE str TEXT DEFAULT '';
            dbaii: LOOP
                IF x > 0 THEN
                    LEAVE dbaii;
                end if;
                SET str = CONCAT(str, x, ',');
                SET x=x+1;
                ITERATE dbaii;
            end loop;
        RETURN str;
    end;

SELECT manejo_de_loop(-10);

CREATE FUNCTION manejo_de_loopv2(x int)
    RETURNS TEXT
    BEGIN
        DECLARE str TEXT DEFAULT '';
            dbaii: LOOP
                IF x > 0 THEN
                    LEAVE dbaii;
                end if;
                REPEAT
                IF x%2 = 0 THEN
                    SET str = CONCAT (str, x, '--AA--');
                ELSE
                    SET str = CONCAT (str, x, '--BB--');
                END IF;
                SET x=x-1;
                until x<=0 end repeat;
                RETURN str;
            end loop;
        RETURN str;
    end;

SELECT manejo_de_loopv2(-1);

#crear una funcion que recive un parametro integer
#la funcion de debe retornar un texto TEXT como respuesta
#el parametro es un valor numerico credi number
#Si es mayor a 50000 es  PLATINIUM
#si es mayor igual a 10000 y menor igual a 50000 es GOLD
#Si es menor a 10000 es SILVER
#la funcion debe retornar si es PLATINIUM, GOLD o SILVER en valor del CREDIT NUMBER
CREATE OR REPLACE FUNCTION determinar_nivel_credito(credit_number INT)
    RETURNS TEXT
    BEGIN
        IF credit_number > 50000 THEN
            RETURN 'PLATINUM';
        ELSEIF credit_number >= 10000 AND credit_number <= 50000 THEN
            RETURN 'GOLD';
        ELSE
            RETURN 'SILVER';
        END IF;
    END;
SELECT determinar_nivel_credito(5000);

#USO DEL CHARLENGTH
#DBAII= 5
#NOS PERMITE CALCULAR CUANTOS CARACTERES TIENE UNA CADENA
#SELECT CHAR_LENGTH('DBAII')=>5
#SELECT CHAR_LENGTH('DBAII 2023')=>10
#SELECT CHAR_LENGTH(' DBAII 2023 ')=>12

SELECT CHAR_LENGTH('DBAII 2023');

#
CREATE OR REPLACE FUNCTION valida_length_7(password TEXT)
    RETURNS TEXT
    BEGIN
        DECLARE resp TEXT DEFAULT '';
        IF char_length(password)>7 THEN
            SET resp = 'PASSED';
            ELSE
            SET resp= 'FAILED';
        end if;
    RETURN resp;
    END;
SELECT valida_length_7('adfs');

#comparar cadenas
#el objetivo es sabersi dos cadenas son iguales
#DBAII= DBAII ? true
#DBAII= DBAII 2023 ? true
#En mySQL o Maria bd
#si son  iguales la funcion me retorna 0
#si son distintas, la funcion me retorna -1 o 1

SELECT strcmp('hol','hola');

#Determinar si dos cadenas son iguales,si son iguales retorna la respuesta CADENAS IGUALES, caso contrario retorna la respueta CADENAS DISTINTAS

CREATE OR REPLACE FUNCTION uso_de_strcmp(cad1 TEXT, cad2 TEXT)
    RETURNS TEXT
    BEGIN
        DECLARE resp TEXT DEFAULT '';
        IF strcmp(cad1,cad2)=0 THEN
            SET resp = 'CADENAS IGUALES';
            ELSE
            SET resp= 'CADENAS DIFERENTES';
        end if;
    RETURN resp;
    END;
SELECT uso_de_strcmp('migato','MIGATsO');

#recibir dos cadenas, si las dos cadenas son iguales y ademas el length es mayor a 15 retornar el mensaje VALIDO
#caso contrario retornar no valido
CREATE OR REPLACE FUNCTION validar_cadenas(cadena1 TEXT, cadena2 TEXT)
    RETURNS TEXT
    BEGIN
        DECLARE resultado TEXT DEFAULT '';
        DECLARE cadenaTotal TEXT DEFAULT '';
        SET cadenaTotal = CONCAT(cadena1, cadena2);
        IF char_length(cadenaTotal)>15 AND strcmp(cadena1, cadena2)=0 then
            SET resultado = 'VALIDO';
        ELSE
            SET resultado = 'NO VALIDO';
        END IF;
        RETURN resultado;
    END;

SELECT validar_cadenas('hola como estas amigo','hola como estas amigo');


#DBAII 2023 Unifranz
#si queremos una parte de la cadena de texto usamos
#2023

SELECT substr('DBAII 2023 Unifranz', 7); #empiexa el numeor una despues de la que queremos tomar
SELECT substr('Hola', 3);
SELECT substr('DBAII 2023 Unifranz',7,4);
#en vez de comas puede que se haye drom y for
SELECT substr('DBAII 2023 Unifranz' FROM 7 FOR 4);

#para contar desde la derecha los caracteres

SELECT substr('DBAII 2023 Unifranz',-8);  #el * solo determina que comienaza contar desde una pociocion derecha pero aun va a la izquierda
SELECT substr('DBAII 2023 Unifranz',-13,4);

#EJERCICIOS DE EVALUACION

#Manejo de
#Base de datos II, gestion 2023 Unifranz

#para buscar unos determinados caracteres dentro de una cadena muy larga usamos
SELECT LOCATE('2023','Base de datos II, gestion 2023 Unifranz'); #le das lascadenas a buscar y posteriormente la cadena en donde bucar
# El Locate tambien admite una opcion int al final('adena a buscar','cadenacompleta, numeor apartir desde donde')
SELECT LOCATE('2023','Base de datos II, gestion 2023 Unifranz 2023',30); #le das lascadenas a buscar y posteriormente la cadena en donde bucar

#crear una funcion que recive dos parametros TEXT, TEXT. ('6993499LP','LP')
#la funcion deberetornar un texto de respuesta
#verificar si la 2dacadena existe en la cadena principal, si existe la cadena debe retornar el sigueinte mensaje "SI existe:6"
#si no existe en la cadena principal retorna el texto "No existe"

CREATE FUNCTION verificar_cadena(cadena_principal TEXT, cadena_buscar TEXT)
RETURNS TEXT
BEGIN
    DECLARE respuesta TEXT;
    DECLARE posicion INT;

    SET posicion = LOCATE(cadena_buscar, cadena_principal);

    IF posicion > 0 THEN
        SET respuesta = CONCAT('SI existe:', posicion);
    ELSE
        SET respuesta = 'No existe';
    END IF;

    RETURN respuesta;
END;

SELECT  verificar_cadena('6993499LP', 'LP');

#Crear una funcion que reciva un parametro integer
CREATE OR REPLACE FUNCTION NumeroPares(par INT)
RETURNS TEXT
BEGIN
    DECLARE cont INT DEFAULT 0;
    DECLARE respuesta TEXT DEFAULT '';

    WHILE cont <= par DO
        SET respuesta = CONCAT(respuesta,cont, ',');
        SET cont=cont+2;
    end while;
    RETURN respuesta;
END;
SELECT NumeroPares(40);

#Crear una funcion que reciba dos aprametros text , unteger
#que concatene ambos datos e imprima la cadena la cantidad de veces que se piden en el dato tipo int, usando while o repet
CREATE OR REPLACE FUNCTION ConcatRepeat(par1 TEXT, limite INT)
RETURNS TEXT
BEGIN
    DECLARE resp TEXT DEFAULT '';

    WHILE limite >= 0 DO
        SET resp = CONCAT(resp,par1,',');
        SET limite = limite -1;
    END WHILE;
    RETURN resp;
END;
SELECT ConcatRepeat('DBAII',3);

#crear una funcion que resiva dos aprametros, un caracter y una cadena y que diga cuantas veces se repite la letra en la cadena

CREATE OR REPLACE FUNCTION letrarepetida(palabra VARCHAR(50), letra CHAR)
RETURNS INT
BEGIN
    DECLARE cont INT DEFAULT 0;
    DECLARE aux INT;
    SET aux = CHAR_LENGTH(palabra);
    IF aux = 0 THEN
        RETURN 0;
    END IF;
        WHILE aux > 0 DO
            IF SUBSTRING(palabra, aux, 1) = letra THEN
                SET cont = cont + 1;
            END IF;
            SET aux = aux - 1;
        END WHILE;

    RETURN cont;
END;

SELECT letrarepetida('hola que hace','x');

#Crear una funcion que reciva una cadena la funciin debe retornar la cantidad de vocales que tiene la cadena, con el tecto cantidad de vovales en la cadena:


CREATE OR REPLACE FUNCTION contar_vocales(palabra VARCHAR(100))
RETURNS TEXT
BEGIN
    DECLARE cont INT DEFAULT 0;
    DECLARE i INT DEFAULT 1;
    DECLARE aux INT;

    SET aux = CHAR_LENGTH(palabra);

    IF aux = 0 THEN
        RETURN 'Cantidad de vocales: 0';
    END IF;

    WHILE i <= aux DO
        IF SUBSTRING(palabra, i, 1) IN ('a', 'e', 'i', 'o', 'u') THEN
            SET cont = cont + 1;
        END IF;
        SET i = i + 1;
    END WHILE;
    RETURN CONCAT('Cantidad de vocales: ', cont);
END;

SELECT contar_vocales('la vaca lola tiene cabeaz y tiene');


#Crear una funcion que reciva una cadena y que determine cuantas palabras hay dentro de la cadena

CREATE OR REPLACE FUNCTION cuantas_palabras(cadena TEXT)
RETURNS INT
BEGIN
    DECLARE cont INT DEFAULT 0;
    DECLARE i INT DEFAULT 1;
    DECLARE aux INT;
    SET aux = CHAR_LENGTH(cadena);
    IF aux = 0 THEN
        RETURN 0;
    END IF;
    WHILE i <= aux DO
        IF SUBSTRING(cadena, i, 1) = ' ' OR i = aux THEN
            SET cont = cont + 1;
        END IF;
        SET i = i + 1;
    END WHILE;
    RETURN cont;
END;
SELECT cuantas_palabras('hey muy buenas a todos  guapisimos');

#Crear unafuncion que reciva una cadena, la funcion determinara la cantidad de apellidos de un nombres que se ingresen, solo un nombre y dos apellidos

CREATE OR REPLACE FUNCTION obtener_apellidos(nombres TEXT)
RETURNS TEXT
BEGIN
    DECLARE posicion INt DEFAULT locate(' ', nombres);
    RETURN substr(nombres, posicion);
END;

SELECT obtener_apellidos('Wilmer cori apaza perez lopez loayza');
